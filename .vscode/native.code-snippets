{
	// Place your native workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"jsHandler": {
		"scope": "cpp",
		"prefix": "jsHandler",
		"body": [
			"// NOLINTNEXTLINE(performance-unnecessary-value-param)",
			"static auto ${1:my}Handler = CBHandler::Create([](const CefString& name, CefRefPtr<CefV8Value> object,",
			"\t\t\t\t\t\t\t\t\t\t\t  const CefV8ValueList& arguments,",
			"\t\t\t\t\t\t\t\t\t\t\t  CefRefPtr<CefV8Value>& retval, CefString& exception) {",
			"\t${0:return true;}",
			"\t;",
			"});",
		]
	},
	"jsFunc": {
		"scope": "cpp",
		"prefix": "jsFunc",
		"body": [
			"CefRefPtr<CefV8Value> ${1:my}Func = CefV8Value::CreateFunction(\"${1:my}\", ${1:my}Handler);",
			"api->SetValue(\"${1:my}\", ${1:my}Func, V8_PROPERTY_ATTRIBUTE_NONE);",
			"$0"
		]
	}
}